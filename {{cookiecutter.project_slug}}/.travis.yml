sudo: required
language: minimal

git:
  depth: 2

services:
  - docker

env:
  global:
    - IMAGE_TAG=travis-ci-test
    - IMAGE_TAG_PROD=travis-ci-prod
  matrix:
    - TARGET=test-travis
    - TARGET=flake8
    - TARGET=isort
    - TARGET=license

matrix:
  fast_finish: true

before_script:
  - docker login -u=decaftravis -p=${DOCKER_PASSWORD}
  - make network

script:
  - docker pull {{cookiecutter.docker_organization}}/{{cookiecutter.project_slug}}:${IMAGE_TAG}
  - make ${TARGET}

stages:
  - build
  - test
  - name: deploy
    if: branch = master

jobs:
  include:
    - stage: build
      script:
        - docker build --build-arg PIPENV_CMD="pipenv install --dev --system --deploy" -t {{cookiecutter.docker_organization}}/{{cookiecutter.project_slug}}:${IMAGE_TAG} .
        - docker build --build-arg PIPENV_CMD="pipenv install --system --deploy" -t {{cookiecutter.docker_organization}}/{{cookiecutter.project_slug}}:${IMAGE_TAG_PROD} .
        - docker push {{cookiecutter.docker_organization}}/{{cookiecutter.project_slug}}:${IMAGE_TAG}
        - docker push {{cookiecutter.docker_organization}}/{{cookiecutter.project_slug}}:${IMAGE_TAG_PROD}
    - stage: deploy
      script:
        - docker pull {{cookiecutter.docker_organization}}/{{cookiecutter.project_slug}}:${IMAGE_TAG_PROD}
      deploy:
        provider: script
        script:
         - docker tag {{cookiecutter.docker_organization}}/{{cookiecutter.project_slug}}:${IMAGE_TAG_PROD} {{cookiecutter.docker_organization}}/{{cookiecutter.project_slug}}:${TRAVIS_COMMIT::12}
         - docker tag {{cookiecutter.docker_organization}}/{{cookiecutter.project_slug}}:${IMAGE_TAG_PROD} {{cookiecutter.docker_organization}}/{{cookiecutter.project_slug}}:${TRAVIS_BRANCH}
         - docker push {{cookiecutter.docker_organization}}/{{cookiecutter.project_slug}}:${TRAVIS_COMMIT::12}
         - docker push {{cookiecutter.docker_organization}}/{{cookiecutter.project_slug}}:${TRAVIS_BRANCH}

notifications:
  email: false
  slack:
    rooms:
      - ${SLACK_ACCOUNT}:${SLACK_TOKEN}#${SLACK_CHANNEL}
    on_success: never
    on_failure: always
    on_pull_requests: false
